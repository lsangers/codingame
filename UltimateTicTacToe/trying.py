from __future__ import annotations
from abc import ABC, abstractmethod
import datetime
from functools import lru_cache
from math import log
from random import choice, shuffle
import sys
import numpy as np

MOVES = [
    0b000000001,
    0b000000010,
    0b000000100,
    0b000001000,
    0b000010000,
    0b000100000,
    0b001000000,
    0b010000000,
    0b100000000,
]
WINS = [
    0b111000000,
    0b000111000,
    0b000000111,

    0b100100100,
    0b010010010,
    0b001001001,

    0b100010001,
    0b001010100,
]
SMALL_TO_BIG = {
    0b000000001: 8,
    0b000000010: 7,
    0b000000100: 6,
    0b000001000: 5,
    0b000010000: 4,
    0b000100000: 3,
    0b001000000: 2,
    0b010000000: 1,
    0b100000000: 0,
}
BIG_TO_SMALL = {
    8: 0b000000001,
    7: 0b000000010,
    6: 0b000000100,
    5: 0b000001000,
    4: 0b000010000,
    3: 0b000100000,
    2: 0b001000000,
    1: 0b010000000,
    0: 0b100000000,
}
ACTION_TO_STRING = {
    (0, 0b100000000): "0 0",
    (0, 0b010000000): "0 1",
    (0, 0b001000000): "0 2",
    (0, 0b000100000): "1 0",
    (0, 0b000010000): "1 1",
    (0, 0b000001000): "1 2",
    (0, 0b000000100): "2 0",
    (0, 0b000000010): "2 1",
    (0, 0b000000001): "2 2",

    (1, 0b100000000): "0 3",
    (1, 0b010000000): "0 4",
    (1, 0b001000000): "0 5",
    (1, 0b000100000): "1 3",
    (1, 0b000010000): "1 4",
    (1, 0b000001000): "1 5",
    (1, 0b000000100): "2 3",
    (1, 0b000000010): "2 4",
    (1, 0b000000001): "2 5",

    (2, 0b100000000): "0 6",
    (2, 0b010000000): "0 7",
    (2, 0b001000000): "0 8",
    (2, 0b000100000): "1 6",
    (2, 0b000010000): "1 7",
    (2, 0b000001000): "1 8",
    (2, 0b000000100): "2 6",
    (2, 0b000000010): "2 7",
    (2, 0b000000001): "2 8",

    (3, 0b100000000): "3 0",
    (3, 0b010000000): "3 1",
    (3, 0b001000000): "3 2",
    (3, 0b000100000): "4 0",
    (3, 0b000010000): "4 1",
    (3, 0b000001000): "4 2",
    (3, 0b000000100): "5 0",
    (3, 0b000000010): "5 1",
    (3, 0b000000001): "5 2",

    (4, 0b100000000): "3 3",
    (4, 0b010000000): "3 4",
    (4, 0b001000000): "3 5",
    (4, 0b000100000): "4 3",
    (4, 0b000010000): "4 4",
    (4, 0b000001000): "4 5",
    (4, 0b000000100): "5 3",
    (4, 0b000000010): "5 4",
    (4, 0b000000001): "5 5",

    (5, 0b100000000): "3 6",
    (5, 0b010000000): "3 7",
    (5, 0b001000000): "3 8",
    (5, 0b000100000): "4 6",
    (5, 0b000010000): "4 7",
    (5, 0b000001000): "4 8",
    (5, 0b000000100): "5 6",
    (5, 0b000000010): "5 7",
    (5, 0b000000001): "5 8",

    (6, 0b100000000): "6 0",
    (6, 0b010000000): "6 1",
    (6, 0b001000000): "6 2",
    (6, 0b000100000): "7 0",
    (6, 0b000010000): "7 1",
    (6, 0b000001000): "7 2",
    (6, 0b000000100): "8 0",
    (6, 0b000000010): "8 1",
    (6, 0b000000001): "8 2",

    (7, 0b100000000): "6 3",
    (7, 0b010000000): "6 4",
    (7, 0b001000000): "6 5",
    (7, 0b000100000): "7 3",
    (7, 0b000010000): "7 4",
    (7, 0b000001000): "7 5",
    (7, 0b000000100): "8 3",
    (7, 0b000000010): "8 4",
    (7, 0b000000001): "8 5",

    (8, 0b100000000): "6 6",
    (8, 0b010000000): "6 7",
    (8, 0b001000000): "6 8",
    (8, 0b000100000): "7 6",
    (8, 0b000010000): "7 7",
    (8, 0b000001000): "7 8",
    (8, 0b000000100): "8 6",
    (8, 0b000000010): "8 7",
    (8, 0b000000001): "8 8",
}
STRING_TO_ACTION = {
    "0 0": (0, 0b100000000),
    "0 1": (0, 0b010000000),
    "0 2": (0, 0b001000000),
    "1 0": (0, 0b000100000),
    "1 1": (0, 0b000010000),
    "1 2": (0, 0b000001000),
    "2 0": (0, 0b000000100),
    "2 1": (0, 0b000000010),
    "2 2": (0, 0b000000001),

    "0 3": (1, 0b100000000),
    "0 4": (1, 0b010000000),
    "0 5": (1, 0b001000000),
    "1 3": (1, 0b000100000),
    "1 4": (1, 0b000010000),
    "1 5": (1, 0b000001000),
    "2 3": (1, 0b000000100),
    "2 4": (1, 0b000000010),
    "2 5": (1, 0b000000001),

    "0 6": (2, 0b100000000),
    "0 7": (2, 0b010000000),
    "0 8": (2, 0b001000000),
    "1 6": (2, 0b000100000),
    "1 7": (2, 0b000010000),
    "1 8": (2, 0b000001000),
    "2 6": (2, 0b000000100),
    "2 7": (2, 0b000000010),
    "2 8": (2, 0b000000001),

    "3 0": (3, 0b100000000),
    "3 1": (3, 0b010000000),
    "3 2": (3, 0b001000000),
    "4 0": (3, 0b000100000),
    "4 1": (3, 0b000010000),
    "4 2": (3, 0b000001000),
    "5 0": (3, 0b000000100),
    "5 1": (3, 0b000000010),
    "5 2": (3, 0b000000001),

    "3 3": (4, 0b100000000),
    "3 4": (4, 0b010000000),
    "3 5": (4, 0b001000000),
    "4 3": (4, 0b000100000),
    "4 4": (4, 0b000010000),
    "4 5": (4, 0b000001000),
    "5 3": (4, 0b000000100),
    "5 4": (4, 0b000000010),
    "5 5": (4, 0b000000001),

    "3 6": (5, 0b100000000),
    "3 7": (5, 0b010000000),
    "3 8": (5, 0b001000000),
    "4 6": (5, 0b000100000),
    "4 7": (5, 0b000010000),
    "4 8": (5, 0b000001000),
    "5 6": (5, 0b000000100),
    "5 7": (5, 0b000000010),
    "5 8": (5, 0b000000001),

    "6 0": (6, 0b100000000),
    "6 1": (6, 0b010000000),
    "6 2": (6, 0b001000000),
    "7 0": (6, 0b000100000),
    "7 1": (6, 0b000010000),
    "7 2": (6, 0b000001000),
    "8 0": (6, 0b000000100),
    "8 1": (6, 0b000000010),
    "8 2": (6, 0b000000001),

    "6 3": (7, 0b100000000),
    "6 4": (7, 0b010000000),
    "6 5": (7, 0b001000000),
    "7 3": (7, 0b000100000),
    "7 4": (7, 0b000010000),
    "7 5": (7, 0b000001000),
    "8 3": (7, 0b000000100),
    "8 4": (7, 0b000000010),
    "8 5": (7, 0b000000001),

    "6 6": (8, 0b100000000),
    "6 7": (8, 0b010000000),
    "6 8": (8, 0b001000000),
    "7 6": (8, 0b000100000),
    "7 7": (8, 0b000010000),
    "7 8": (8, 0b000001000),
    "8 6": (8, 0b000000100),
    "8 7": (8, 0b000000010),
    "8 8": (8, 0b000000001),
}
VALID_ACTIONS = {
    board: list(filter(lambda move: not(move & board), MOVES))
    for board in range(0b000000000, 0b1000000000)
}
@lru_cache
def to_big(index):
    """Returns lambda to translate small to big move."""
    return lambda action: (index, action)

TRANSLATED_VALID_ACTIONS = {
    index: {
        board: list(map(to_big(index), VALID_ACTIONS[board]))
        for board in range(0b000000000, 0b1000000000)
    } for index in range(9)
}

print()
